{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","FindMovie","onAddMovie","useState","setMovie","title","setTitle","noMovieError","setNoMovieError","isRequired","setIsRequired","loadMovie","useCallback","a","fetch","then","response","json","receivedMovie","Response","Error","handleSubmit","event","preventDefault","onSubmit","htmlFor","type","id","placeholder","classnames","value","onChange","target","handleChange","onFocus","disabled","onClick","App","setMovies","newMovie","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b95232ba.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\" data-cy=\"card-image\">\n\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movie-title\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => {\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","import React, { useCallback, useState } from 'react';\nimport classnames from 'classnames';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\n\ninterface FindMovieProps {\n  onAddMovie: (newMovie: Movie | null) => void;\n}\n\nexport const FindMovie: React.FC<FindMovieProps> = ({ onAddMovie }) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [title, setTitle] = useState('');\n  const [noMovieError, setNoMovieError] = useState('');\n  const [isRequired, setIsRequired] = useState(false);\n\n  const loadMovie = useCallback(\n    async () => {\n      const receivedMovie = await fetch(`https://www.omdbapi.com/?apikey=4e85fbc0&t=${title}`)\n        .then(response => response.json());\n\n      if (receivedMovie.Response === 'True') {\n        setNoMovieError('');\n        setMovie(receivedMovie);\n      } else {\n        setNoMovieError(receivedMovie.Error);\n        setMovie(null);\n      }\n    }, [title],\n  );\n\n  const handleSubmit = useCallback((event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (title) {\n      loadMovie();\n    } else {\n      setIsRequired(true);\n    }\n\n    return () => {\n      'Movie is loading';\n    };\n  }, [title]);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setNoMovieError('');\n    setIsRequired(false);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(event) => {\n          handleSubmit(event);\n        }}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classnames(\n                'input',\n                { 'is-danger': isRequired },\n              )}\n              value={title}\n              onChange={(event) => {\n                handleChange(event);\n              }}\n              onFocus={() => setIsRequired(true)}\n            />\n          </div>\n\n          <p className=\"help is-danger\">\n            {\n              noMovieError\n            }\n          </p>\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-light\"\n              disabled={!title}\n              data-cy=\"find\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              data-cy=\"add\"\n              type=\"button\"\n              className=\"button is-primary\"\n              disabled={!title}\n              onClick={() => {\n                onAddMovie(movie);\n                setTitle('');\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {\n          movie\n            ? (<MovieCard movie={movie} />)\n            : (noMovieError)\n        }\n      </div>\n    </>\n  );\n};\n","import { FC, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: FC = () => {\n  const [movies,\n    setMovies,\n  ] = useState<Movie[]>([]);\n\n  const handleAddMovie = (newMovie: Movie | null) => {\n    if (newMovie) {\n      const movieToAdd = movies.find(\n        (movie: Movie) => movie.imdbID === newMovie.imdbID,\n      );\n\n      if (!movieToAdd) {\n        setMovies(\n          [...movies, newMovie],\n        );\n      }\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        {\n          movies\n            ? (<MoviesList movies={movies} />)\n            : (null)\n        }\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie onAddMovie={handleAddMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}